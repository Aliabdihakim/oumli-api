generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Product {
  id          Int                @id @unique @default(autoincrement())
  name        String
  description String
  price       Float
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  image       String?
  attributes  ProductAttribute[]
  order_items order_items[]
}

model Attribute {
  id       Int                @id @unique @default(autoincrement())
  name     String             @db.VarChar(255)
  icon     String
  products ProductAttribute[]
}

model ProductAttribute {
  id          Int       @id @unique @default(autoincrement())
  productId   Int
  attributeId Int
  attribute   Attribute @relation(fields: [attributeId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product     Product   @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([productId, attributeId])
  @@index([attributeId], map: "ProductAttribute_attributeId_index")
  @@index([productId], map: "ProductAttribute_productId_index")
}

model User {
  id        Int      @id @unique @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    orders[]
}

model Reviews {
  id          Int       @id @unique @default(autoincrement())
  name        String    @db.VarChar(255)
  title       String    @db.VarChar(255)
  description String
  image       String?
  location    String?   @db.VarChar(255)
  createdAt   DateTime? @default(now()) @db.Timestamp(6)
  updatedAt   DateTime? @default(now()) @updatedAt @db.Timestamp(6)
}

model order_items {
  id        Int     @id @default(autoincrement())
  orderid   Int
  productid Int
  quantity  Int
  price     Float
  orders    orders  @relation(fields: [orderid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_order")
  Product   Product @relation(fields: [productid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product")
}

model orders {
  id          Int           @id @default(autoincrement())
  userid      Int
  totalamount Float
  currency    String?       @default("sek") @db.VarChar(10)
  status      String?       @default("pending") @db.VarChar(50)
  createdat   DateTime?     @default(now()) @db.Timestamp(6)
  updatedat   DateTime?     @default(now()) @db.Timestamp(6)
  order_items order_items[]
  User        User          @relation(fields: [userid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user")
}
